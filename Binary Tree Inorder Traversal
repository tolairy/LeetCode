/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode *root) {
        
        vector<int> result;
        
        TreeNode *cur, *pre;
        
        cur = root;
        
        while (cur) {
            
            if (cur->left) {
                pre = cur->left;
                while (pre->right && pre->right != cur) {
                    pre = pre->right;
                }
                
                if (pre->right == NULL) { //the previous node of current node has not been visited.
                    pre->right = cur;
                    cur = cur->left;
                }else { //the previous node of current node has been visited
                    result.push_back(cur->val);
                    cur = cur->right;
                    pre->right = NULL;
                }
                
            }else {
                result.push_back(cur->val);
                cur = cur->right;
               
            }
        }
        return result;
    }
};
