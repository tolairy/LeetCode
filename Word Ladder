class Solution {
    
public:

   
    int ladderLength(string start, string end, unordered_set<string> &dict) {
       if(start.length() == 0 && end.length() == 0) return 0;

    //BFS
        queue<string> childs;
        childs.push(start);
        queue<int> distance;
        distance.push(1);
        set<string> visited;
        while(!childs.empty()){
            string cur = childs.front();
            childs.pop();
            int dis = distance.front();
            distance.pop();
            if(cur == end) return dis;

            
            for(int i = 0; i < cur.length(); i++){
            string tmp = cur;
            for(int j = 'a'; j <= 'z'; j++){
                tmp[i] = (char)j;
                if(dict.count(tmp) && !visited.count(tmp)){
                    visited.insert(tmp);
                    childs.push(tmp);
                    distance.push(dis+1);
                }
            }

        }
    }
    return 0; 
    
        
    }
};