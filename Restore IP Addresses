class Solution {
public:
    void getAddress(string s, int start, int num, string result, vector<string> &output) {
        int length = s.length();
        int left = 4 - num;
        
        for (int i = 1; i <= 3; i++) {
            if ((length - start - i) > (3 * left) || (length - start - i) < (1 * left)) {
                continue;
            }else {
                string cur = s.substr(start, i);
                if (atoi(cur.c_str()) <= 255) {
                    if (i != 1 && cur[0] == '0') {
                        continue;
                    }
                    string tmp = result;
                    if (tmp.length())
                        tmp += ".";
                    tmp += cur;
                    if (left == 0) {
                        output.push_back(tmp);
                        break;
                    }else {
                        getAddress(s, start + i, num + 1, tmp, output);
                    }
                }
            }
            
        }
    }
    vector<string> restoreIpAddresses(string s) {
        
        vector<string> output;
        if (s.length() == 0) {
            return output;
        }
        
        int length = s.length();
        string result;
        getAddress(s, 0, 1, result, output);
        
        return output;
    }
};
